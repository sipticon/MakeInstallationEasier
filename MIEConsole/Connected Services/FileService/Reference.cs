//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MIEConsole.FileService {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EStatusOfOperation", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    public enum EStatusOfOperation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUCCESSFULL = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FAILURE = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FIND = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileService.IFileTransfer")]
    public interface IFileTransfer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileTransfer/UploadFile", ReplyAction="http://tempuri.org/IFileTransfer/UploadFileResponse")]
        MIEConsole.FileService.EStatusOfOperation UploadFile(string filePath, System.IO.FileStream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileTransfer/UploadFile", ReplyAction="http://tempuri.org/IFileTransfer/UploadFileResponse")]
        System.Threading.Tasks.Task<MIEConsole.FileService.EStatusOfOperation> UploadFileAsync(string filePath, System.IO.FileStream stream);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileTransferChannel : MIEConsole.FileService.IFileTransfer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileTransferClient : System.ServiceModel.ClientBase<MIEConsole.FileService.IFileTransfer>, MIEConsole.FileService.IFileTransfer {
        
        public FileTransferClient() {
        }
        
        public FileTransferClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileTransferClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileTransferClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileTransferClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MIEConsole.FileService.EStatusOfOperation UploadFile(string filePath, System.IO.FileStream stream) {
            return base.Channel.UploadFile(filePath, stream);
        }
        
        public System.Threading.Tasks.Task<MIEConsole.FileService.EStatusOfOperation> UploadFileAsync(string filePath, System.IO.FileStream stream) {
            return base.Channel.UploadFileAsync(filePath, stream);
        }
    }
}
