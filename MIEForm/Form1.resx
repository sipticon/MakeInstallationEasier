<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>49</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>